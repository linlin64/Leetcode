159. Longest Substring with At Most Two Distinct Characters 


//该题和leetcode159一样，唯一不同就是counter.size()>k。其他步骤基本一致。
class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        //base case
        if(k==0)
        return 0;

        char[] arr=s.toCharArray();

        int left=0;
        int right=0;
        int maxLen=0;
        int n = arr.length;
        Map<Character,Integer> counter = new HashMap<>();

        while(right<n)
        {
            counter.put(arr[right],counter.getOrDefault(arr[right],0)+1);
            while(counter.size()>k) //When the sliding window contain letters more than k 
            {
                counter.put(arr[left],counter.get(arr[left])-1);//左窗口收缩了就要把左指针的字母出现次数减去一次
                if(counter.get(arr[left])==0)//判断减去的左指针字母是否不再出现在新窗口里。
                {
                    counter.remove(arr[left]);
                }
                left++;//同步counter.put(arr[left],counter.get(arr[left])-1);这一步，左窗口收缩。也就是左指针向右移动。
            }
            maxLen=Math.max(maxLen,right-left+1);//inner while loop结束后，sliding window目前就是最多k个字母了，然后我们就更新目前窗口的maxLen
            right++;//expand sliding window.
        }
        return maxLen;
    }
}
