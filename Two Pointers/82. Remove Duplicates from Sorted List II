82. Remove Duplicates from Sorted List II
82. Remove Duplicates from Sorted List II
We would set two pointer, one pointer which traverse all nodes for finding duplicate nodes, if found, we will remove it.
Another pointer is dummy, we will use it to save all unique nodes.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null || head.next==null)
        {
            return head;
        }

        ListNode dummy = new ListNode();
        dummy.next=head;

        ListNode pre=dummy,
        cur=head;

        while(cur!=null)
        {
            if(cur.next!=null && cur.val==cur.next.val){
                while(cur.next!=null && cur.val==cur.next.val)
                {
                    cur=cur.next;
                }
                pre.next=cur.next;
            }else
            {
                pre=cur;
            }
            cur=cur.next;
        }
        return dummy.next;
    }
}
